#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('TestNode:server');
var http = require('http');
var msql = require('mssql');
var io = require('socket.io');
var jade = require('jade');
//var testModule = require('../lib/TestModule');

/**
 * Get port from environment and store in Express.
 */
var sqlconfig = {
    user: 'sa',
    password: 'go0970391578',
    server: 'localhost',
    database: 'SuntiumQA',
    options: {}
}

var port = normalizePort(process.env.PORT || '3000');

app.set('port', port);

/**
 * Create HTTP server.
 */
var server = http.createServer(app);
/**
 * Listen on provided port, on all network interfaces.
 */

skt_io = undefined;
gGroupInfos = [];

function SystemInit() {
    var gen = run();
    gen.next();
    function GetGroups() {
        //<editor-fold desc="SQL Query">
        new msql.Request()
            .query('SELECT * FROM [SuntiumQA].[dbo].[infoGroup]')
            .then(function (records) {
                gen.next(records);
            })
            .catch(function (err) {
                console.log(err);
            });
        //</editor-fold>
    }
    function GetGroupDetailByID(groupid) {
        //<editor-fold desc="SQL Query">
        new msql.Request()
            .input('id', msql.NChar(2), groupid)
            .query('SELECT * FROM [SuntiumQA].[dbo].[infoGroup] WHERE id = @id')
            .then(function (records) {
                gen.next(records);
            })
            .catch(function (err) {
                console.log(err);
            });
        //</editor-fold>
    }

    function* run(){
        var temp_GroupInfos = [];//reset
        var groupInfos = yield GetGroups();
        for(var i = 0; i < groupInfos.length; i++){
            var GroupInfo = groupInfos[i];
            var grpDetails = yield GetGroupDetailByID(GroupInfo.id);
            GroupInfo.Detail = grpDetails;
            gGroupInfos.push(GroupInfo);
        }
        Init_WebSocket();
        gGroupInfos = temp_GroupInfos;
        console.log('System init finished');
    }
}
function Init_Server() {
    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
    console.log("Server has started.");
    console.log("Listening on port " + port + ".");
}
function Init_WebSocket() {
    skt_io = io.listen(server);
    skt_io.sockets.on('connection', function (socket) {
        console.log('default connection');
    });
    for(var i = 0; i < gGroupInfos.length; i++){
        var nspid = gGroupInfos[i].id;
        var nsp = skt_io.of('/' + nspid);
        nsp.on('connection', function (socket) {
            socket.emit('init', {'message': 'connectted nsp ' + nspid + '.'});
            socket.on('checkdevid', function (devid) {
                socket.join(devid);
                nsp.to(devid).emit('chat message', 'hi' + devid);
            });
            socket.on('chat message', function (msg) {
                nsp.emit('chat message', 'nsp/01/' + msg);
            });
            socket.on('setvar', function (msg) {
                jiji = msg;
            });
            socket.on('getvar', function (msg) {
                nsp.emit('rspvar', jiji);
            });
            socket.on('docmd', function (ObjCommand) {
                GetGroupInfoByID(CheckGroupInfo);
                function CheckGroupInfo(records) {
                    console.log(records);
                    if (records.length > 0) {
                        var infoGroup = records[0];
                        if (infoGroup.modeDisplay == null) {
                            //GetLastRenon
                        }
                        else {
                            if (ObjCommand.ModeID == infoGroup.modeDisplay) {
                                switch (ObjCommand.Action) {
                                    case 'forward':
                                        DoForward(infoGroup);
                                        break;
                                    case 'backward':
                                        DoBackward(infoGroup);
                                        break;
                                    default:
                                        break;
                                }
                            }
                            else {

                            }
                        }
                    }
                    else {
                        // Rsp Group ID don't exist.
                    }
                    function DoForward(infoGroup) {
                        if (infoGroup.flagIndex < infoGroup.ImgQty - 1) {
                            var pkRenan = infoGroup.pkM;
                            GetRenanImg(pkRenan);
                        }
                        else {
                            objRsp.Mode = false;
                            objRsp.Info = 'be at an end of this lot.';
                            //res.json(objRsp);
                        }
                        function GetRenanImg(pkRenan) {
                            //<editor-fold desc="SQL Query">
                            new sql.Request()
                                .input('pkParent', sql.NChar(7), pkRenan.trim())
                                .query('SELECT * FROM [SuntiumQA].[dbo].[m_WorkpieceImages] ' +
                                    'WHERE pkParent = @pkParent ORDER BY id ASC')
                                .then(function (records) {
                                    if (records.length > 0) {
                                        var RenanImages = records;
                                        var startIndex = infoGroup.flagIndex;
                                        var endIndex = startIndex + infoGroup.SumDisplayQty > infoGroup.ImgQty
                                            ? infoGroup.ImgQty - 1 : startIndex + infoGroup.SumDisplayQty;
                                        var aryImages = RenanImages.slice(startIndex, endIndex);
                                        //console.log(aryImages);
                                        GetGroupDevs(aryImages);
                                    }
                                    else {
                                        objRsp.Mode = false;
                                        objRsp.Info = 'No Image exist. Please call system manager.';
                                        //res.json(objRsp);
                                    }
                                })
                                .catch(function (err) {
                                    console.log(err);
                                });
                            //</editor-fold>
                            function GetGroupDevs(aryImages) {
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('pkGroup', sql.NChar(7), ObjCommand.GroupID.trim())
                                    .query('SELECT * FROM [SuntiumQA].[dbo].[info_ScreenDevice] ' +
                                        'WHERE pkGroup = @pkGroup ORDER BY iGSN ASC')
                                    .then(function (records) {
                                        if (records.length > 0) {
                                            var objGroupDevs = {
                                                nowIndex: 0,
                                                Devices: records
                                            }
                                            var idxImage = 0;
                                            for (var i = 0; i < objGroupDevs.Devices.length; i++) {
                                                var devDisplayQty = objGroupDevs.Devices[i].iDisplayQty;
                                                objGroupDevs.Devices[i].Images = aryImages.slice(idxImage, idxImage + devDisplayQty);
                                                objGroupDevs.Devices[i].nowIndex = 0;
                                                idxImage += devDisplayQty;
                                                for (var j = 0; j < Images.length; j++) {
                                                    var tempImageObj = {
                                                        Path: '/images/suntium/' + Images[j].pkImage + '.jpg',
                                                        Description: '說明'
                                                    }
                                                    aryImages.push(tempImageObj);
                                                }
                                            }
                                            //Send Emit
                                            //ForeachDevs(objGroupDevs);
                                        }
                                        else {
                                            objRsp.Mode = false;
                                            objRsp.Info = 'No device in this group.';
                                            //res.json(objRsp);
                                        }
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function ForeachDevs(objGroupDevs) {
                                if (objGroupDevs.nowIndex < objGroupDevs.Devices.length) {
                                    InsertCmdMaster(objGroupDevs);
                                }
                                else {
                                    UpdateGroupFlag();
                                }
                            }

                            function UpdateGroupFlag() {
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('id', sql.NChar(5), infoGroup.id.trim())
                                    .input('flagIndex', sql.NChar(5), infoGroup.flagIndex + infoGroup.SumDisplayQty)
                                    .input('pkM', sql.NChar(12), infoGroup.pkM)
                                    .query(
                                        'UPDATE [SuntiumQA].[dbo].[info_Group] ' +
                                        'SET flagIndex = @flagIndex, pkM = @pkM ' +
                                        'WHERE id = @id'
                                    )
                                    .then(function () {
                                        objRsp.info = 'Success!!!!!'
                                        //res.json(objRsp);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function InsertCmdMaster(objGroupDevs) {
                                var dtNow = new Date();
                                dtNow.setTime(dtNow.getTime() + (8 * 60 * 60 * 1000));
                                var objDevice = objGroupDevs.Devices[objGroupDevs.nowIndex];
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('pkDev', sql.NChar(2), objDevice.id.trim())
                                    .input('pkRenan', sql.NChar(7), pkRenan.trim())
                                    .input('dtQuery', sql.DateTime(), dtNow)
                                    .input('dtString', sql.NVarChar(50), dtNow.toISOString())
                                    .input('bValid', sql.NVarChar(50), false)
                                    .query(
                                        'INSERT INTO [SuntiumQA].[dbo].[q_cmd]' +
                                        ' ([pkDev], [dtQuery], [bValid], [dtString], [pkRenan]) ' +
                                        ' VALUES (@pkDev, @dtQuery, @bValid, @dtString, @pkRenan)'
                                    )
                                    .then(function () {
                                        InsertImage(dtNow, objGroupDevs);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function InsertImage(dtNow, objGroupDevs) {
                                var objDevice = objGroupDevs.Devices[objGroupDevs.nowIndex];
                                var objImages = objDevice.Images[objDevice.nowIndex];
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('pkImage', sql.NChar(13), objImages.id.trim())
                                    .input('pkParent', sql.NVarChar(50), dtNow.toISOString())
                                    .query(
                                        'INSERT INTO [SuntiumQA].[dbo].[q_cmddetail]' +
                                        ' ([pkImage], [pkParent]) ' +
                                        ' VALUES (@pkImage, @pkParent)'
                                    )
                                    .then(function () {
                                        if (objDevice.nowIndex == objDevice.Images.length - 1) {
                                            UpdateCMDMaster(dtNow, objGroupDevs);
                                        }
                                        else {
                                            objDevice.nowIndex++;
                                            InsertImage(dtNow, objGroupDevs);
                                        }
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function UpdateCMDMaster(dtNow, objGroupDevs) {
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('dtQuery', sql.DateTime(), dtNow)
                                    .query(
                                        'UPDATE [SuntiumQA].[dbo].[q_cmd] ' +
                                        'SET [bValid] = 1 ' +
                                        'WHERE dtQuery = @dtQuery'
                                    )
                                    .then(function () {
                                        UpdateDevStatus(dtNow, objGroupDevs);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function UpdateDevStatus(dtNow, objGroupDevs) {
                                var NowDevice = objGroupDevs.Devices[objGroupDevs.nowIndex];
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('id', sql.NChar(5), NowDevice.id.trim())
                                    .query(
                                        'UPDATE [SuntiumQA].[dbo].[info_ScreenDevice] ' +
                                        'SET [bStatusChange] = 1 ' +
                                        'WHERE id = @id'
                                    )
                                    .then(function () {
                                        objGroupDevs.nowIndex++;
                                        ForeachDevs(objGroupDevs);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                        }
                    }
                    function DoBackward(infoGroup) {
                        if (infoGroup.flagIndex > 0) {
                            var pkRenan = infoGroup.pkM;
                            GetRenanImg(pkRenan);
                        }
                        else {
                            objRsp.Mode = false;
                            objRsp.Info = 'be at an end of this lot.';
                            //res.json(objRsp);
                        }
                        function GetRenanImg(pkRenan) {
                            //<editor-fold desc="SQL Query">
                            new sql.Request()
                                .input('pkParent', sql.NChar(7), pkRenan.trim())
                                .query('SELECT * FROM [SuntiumQA].[dbo].[m_WorkpieceImages] ' +
                                    'WHERE pkParent = @pkParent ORDER BY id ASC')
                                .then(function (records) {
                                    if (records.length > 0) {
                                        var RenanImages = records;
                                        infoGroup.flagIndex = infoGroup.flagIndex >= RenanImages.length ? RenanImages.length : infoGroup.flagIndex;
                                        var endIndex = infoGroup.flagIndex;
                                        var startIndex = endIndex - infoGroup.SumDisplayQty * 2 < 0
                                            ? 0 : endIndex - infoGroup.SumDisplayQty * 2;
                                        var aryImages = RenanImages.slice(startIndex, endIndex);
                                        //console.log(aryImages);
                                        GetGroupDevs(aryImages);
                                    }
                                    else {
                                        objRsp.Mode = false;
                                        objRsp.Info = 'No Image exist. Please call system manager.';
                                        //res.json(objRsp);
                                    }
                                })
                                .catch(function (err) {
                                    console.log(err);
                                });
                            //</editor-fold>
                            function GetGroupDevs(aryImages) {
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('pkGroup', sql.NChar(7), ObjCommand.GroupID.trim())
                                    .query('SELECT * FROM [SuntiumQA].[dbo].[info_ScreenDevice] ' +
                                        'WHERE pkGroup = @pkGroup ORDER BY iGSN ASC')
                                    .then(function (records) {
                                        if (records.length > 0) {
                                            var objGroupDevs = {
                                                nowIndex: 0,
                                                Devices: records
                                            }
                                            var idxImage = 0;
                                            for (var i = 0; i < objGroupDevs.Devices.length; i++) {
                                                var devDisplayQty = objGroupDevs.Devices[i].iDisplayQty;
                                                objGroupDevs.Devices[i].Images = aryImages.slice(idxImage, idxImage + devDisplayQty);
                                                objGroupDevs.Devices[i].nowIndex = 0;
                                                idxImage += devDisplayQty;
                                            }
                                            ForeachDevs(objGroupDevs);
                                        }
                                        else {
                                            objRsp.Mode = false;
                                            objRsp.Info = 'No device in this group.';
                                            //res.json(objRsp);
                                        }
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function ForeachDevs(objGroupDevs) {
                                if (objGroupDevs.nowIndex < objGroupDevs.Devices.length) {
                                    InsertCmdMaster(objGroupDevs);
                                }
                                else {
                                    UpdateGroupFlag();
                                }
                            }

                            function UpdateGroupFlag() {
                                var devflag = infoGroup.flagIndex - infoGroup.SumDisplayQty < 0 ? 0 : infoGroup.flagIndex - infoGroup.SumDisplayQty;
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('id', sql.NChar(5), infoGroup.id.trim())
                                    .input('flagIndex', sql.NChar(5), devflag)
                                    .input('pkM', sql.NChar(12), infoGroup.pkM)
                                    .query(
                                        'UPDATE [SuntiumQA].[dbo].[info_Group] ' +
                                        'SET flagIndex = @flagIndex, pkM = @pkM ' +
                                        'WHERE id = @id'
                                    )
                                    .then(function () {
                                        objRsp.info = 'Success!!!!!'
                                        //res.json(objRsp);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function InsertCmdMaster(objGroupDevs) {
                                var dtNow = new Date();
                                dtNow.setTime(dtNow.getTime() + (8 * 60 * 60 * 1000));
                                var objDevice = objGroupDevs.Devices[objGroupDevs.nowIndex];
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('pkDev', sql.NChar(2), objDevice.id.trim())
                                    .input('pkRenan', sql.NChar(7), pkRenan.trim())
                                    .input('dtQuery', sql.DateTime(), dtNow)
                                    .input('dtString', sql.NVarChar(50), dtNow.toISOString())
                                    .input('bValid', sql.NVarChar(50), false)
                                    .query(
                                        'INSERT INTO [SuntiumQA].[dbo].[q_cmd]' +
                                        ' ([pkDev], [dtQuery], [bValid], [dtString], [pkRenan]) ' +
                                        ' VALUES (@pkDev, @dtQuery, @bValid, @dtString, @pkRenan)'
                                    )
                                    .then(function () {
                                        InsertImage(dtNow, objGroupDevs);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function InsertImage(dtNow, objGroupDevs) {
                                var objDevice = objGroupDevs.Devices[objGroupDevs.nowIndex];
                                var objImages = objDevice.Images[objDevice.nowIndex];
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('pkImage', sql.NChar(13), objImages.id.trim())
                                    .input('pkParent', sql.NVarChar(50), dtNow.toISOString())
                                    .query(
                                        'INSERT INTO [SuntiumQA].[dbo].[q_cmddetail]' +
                                        ' ([pkImage], [pkParent]) ' +
                                        ' VALUES (@pkImage, @pkParent)'
                                    )
                                    .then(function () {
                                        if (objDevice.nowIndex == objDevice.Images.length - 1) {
                                            UpdateCMDMaster(dtNow, objGroupDevs);
                                        }
                                        else {
                                            objDevice.nowIndex++;
                                            InsertImage(dtNow, objGroupDevs);
                                        }
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function UpdateCMDMaster(dtNow, objGroupDevs) {
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('dtQuery', sql.DateTime(), dtNow)
                                    .query(
                                        'UPDATE [SuntiumQA].[dbo].[q_cmd] ' +
                                        'SET [bValid] = 1 ' +
                                        'WHERE dtQuery = @dtQuery'
                                    )
                                    .then(function () {
                                        UpdateDevStatus(dtNow, objGroupDevs);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                            function UpdateDevStatus(dtNow, objGroupDevs) {
                                var NowDevice = objGroupDevs.Devices[objGroupDevs.nowIndex];
                                //<editor-fold desc="SQL Query">
                                new sql.Request()
                                    .input('id', sql.NChar(5), NowDevice.id.trim())
                                    .query(
                                        'UPDATE [SuntiumQA].[dbo].[info_ScreenDevice] ' +
                                        'SET [bStatusChange] = 1 ' +
                                        'WHERE id = @id'
                                    )
                                    .then(function () {
                                        objGroupDevs.nowIndex++;
                                        ForeachDevs(objGroupDevs);
                                    })
                                    .catch(function (err) {
                                        console.log(err);
                                    });
                                //</editor-fold>
                            }

                        }
                    }
                }
                function GetGroupInfoByID(groupid, _callbackfn) {
                    //<editor-fold desc="SQL Query">
                    new msql.Request()
                        .input('id', msql.NChar(2), groupid)
                        .query('SELECT * FROM [SuntiumQA].[dbo].[vinfo_Group] WHERE id = @id')
                        .then(function (records) {
                            _callbackfn(records);
                        })
                        .catch(function (err) {
                            console.log(err);
                        });
                    //</editor-fold>
                }
            });
            socket.on('dodisconnect', function (msg) {
                socket.disconnect();
            });
        });
    }
}
msql.connect(sqlconfig)
    .then(function () {
        Init_Server();
        SystemInit();
    })
    .catch(function (err) {
        console.log(err);
    });

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
    var port = parseInt(val, 10);

    if (isNaN(port)) {
        // named pipe
        return val;
    }

    if (port >= 0) {
        // port number
        return port;
    }

    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
